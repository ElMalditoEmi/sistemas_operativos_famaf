/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var m=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var E=(c,n)=>{for(var t in n)m(c,t,{get:n[t],enumerable:!0})},x=(c,n,t,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of T(n))!v.call(c,s)&&s!==t&&m(c,s,{get:()=>n[s],enumerable:!(e=y(n,s))||e.enumerable});return c};var L=c=>x(m({},"__esModule",{value:!0}),c);var B={};E(B,{default:()=>b});module.exports=L(B);var a=require("obsidian"),g=require("obsidian"),P={extraLang:{dataview:!0,dataviewjs:!1},defaultTitle:"(x)"},k=class extends a.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e,this.pp=g.MarkdownPreviewRenderer.codeBlockPostProcessors}rebuildView(t){this.pp.hasOwnProperty(t)&&this.plugin.rebuildView()}display(){let{containerEl:t}=this;t.empty(),t.addClass("cbt-settings"),new a.Setting(t).setName("Default tab title").setDesc("When no lang is set in the codeblock, this title will be displayed on the tab.").addText(e=>{e.setValue(this.plugin.settings.defaultTitle).setPlaceholder(P.defaultTitle).onChange(s=>{s=s.trim(),this.plugin.settings.defaultTitle=s.length>0?s:P.defaultTitle,this.plugin.saveSettings()})}),new a.Setting(t).setName("Add new lang").setDesc("Add a plugin registerd language of codeblock.").addText(e=>{e.setPlaceholder("lang"),this.textComponent=e}).addButton(e=>{e.setClass("mod-cta").setButtonText("+").onClick(async()=>{let s=this.textComponent.getValue().trim().toLowerCase();s.length===0||s.match(/^[\S]+$/)===null||(this.plugin.settings.extraLang[s]=this.pp.hasOwnProperty(s),await this.plugin.saveSettings(),this.display(),this.rebuildView(s))})});for(let[e,s]of Object.entries(this.plugin.settings.extraLang)){let u=this.pp.hasOwnProperty(e)?"mod-success":"mod-warning",w=this.pp.hasOwnProperty(e)?"Registerd":"Not registerd",f=this.pp.hasOwnProperty(e)?"check-circle":"alert-circle";(0,a.setIcon)(new a.Setting(this.containerEl).setName(e).addToggle(i=>{i.setValue(s).onChange(o=>{this.plugin.settings.extraLang[e]=o,this.plugin.saveSettings(),this.rebuildView(e)})}).addButton(i=>{i.setIcon("trash").setClass("clickable-icon").onClick(async()=>{this.plugin.settings.extraLang[e]&&this.rebuildView(e),delete this.plugin.settings.extraLang[e],await this.plugin.saveSettings(),this.display(),new a.Notice("Extra language is successfully deleted.")})}).nameEl.createEl("span",{cls:u,attr:{"aria-label":w}}),f)}}},b=class extends a.Plugin{rebuildView(){this.app.workspace.iterateAllLeaves(t=>{t.getViewState().type==="markdown"&&t.rebuildView()})}async loadSettings(){this.settings=Object.assign({},P,await this.loadData()),this.rebuildView()}async saveSettings(){await this.saveData(this.settings)}onunload(){g.MarkdownPreviewRenderer.unregisterCodeBlockPostProcessor=function(t){delete this.codeBlockPostProcessors[t]},g.MarkdownPreviewRenderer.registerCodeBlockPostProcessor=function(t,e){var s=this.codeBlockPostProcessors;if(s.hasOwnProperty(t))throw new Error("Code block postprocessor for language ".concat(t," is already registered"));s[t]=e},this.rebuildView(),console.log("CodeBlock-Tabs"," is unloaded.")}async onload(){console.log("CodeBlock-Tabs"," is loaded."),this.addSettingTab(new k(this.app,this)),await this.loadSettings();let t=this;g.MarkdownPreviewRenderer.unregisterCodeBlockPostProcessor=function(i){this.codeBlockPostProcessors.hasOwnProperty(i)&&t.settings.extraLang[i]&&t.rebuildView(),delete this.codeBlockPostProcessors[i]},g.MarkdownPreviewRenderer.registerCodeBlockPostProcessor=function(i,o){let d=this.codeBlockPostProcessors;if(d.hasOwnProperty(i))throw new Error("Code block postprocessor for language ".concat(i," is already registered"));d[i]=o,t.settings.extraLang[i]&&t.rebuildView()};let e=0,s,u,w,f=i=>{let o=u.createEl("li",{cls:"tab-item"}),d=Array.from(i.children[0].classList).filter(r=>r.includes("language-")).map(r=>r.split("language-").at(-1))[0];o.innerText=d||this.settings.defaultTitle;let h=i.children[0].getAttr("data-meta");if(h)try{o.innerText=JSON.parse(decodeURI(h).replace(/'/g,'"')).title}catch(r){}let l=w.createEl("div",{cls:"tab-content"});l.appendChild(i.childNodes[0]),e===1&&(o.addClass("active"),l.addClass("active")),o.addEventListener("click",function(){var r,C;(r=this.parentNode)==null||r.childNodes.forEach(p=>{p instanceof Element&&p.removeClass("active")}),this.addClass("active"),(C=l.parentNode)==null||C.childNodes.forEach(p=>{p instanceof Element&&p.removeClass("active")}),l.addClass("active")})};this.registerMarkdownPostProcessor((i,o)=>{if(o.hasOwnProperty("displayMode")||o.containerEl.matchParent(".markdown-preview-sizer .markdown-preview-section"))return;let d=!0;if(i.childElementCount===1){let h=i.children[0];switch(h.nodeName){case"PRE":d=!1;break;case"DIV":let l=Array.from(h.classList).filter(r=>r.startsWith("block-language-")).map(r=>r.slice(15))[0];l&&(l=l.toLowerCase(),this.settings.extraLang.hasOwnProperty(l)&&this.settings.extraLang[l]&&(d=!1));break}}if(d){e=0;return}switch(e){case 0:s=i,e++;break;case 1:s.className="tab-container",u=s.createEl("ul",{cls:"tabs"}),w=s.createEl("div",{cls:"tab-contents"}),f(s);default:e++,f(i);break}},34016268)}};
